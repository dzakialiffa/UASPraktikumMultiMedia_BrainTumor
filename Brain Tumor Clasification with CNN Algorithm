{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNIpqqSrggV1jlED8PbFs60"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"KsaMh-vGpOYg","executionInfo":{"status":"ok","timestamp":1689687613463,"user_tz":-420,"elapsed":4697,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"outputs":[],"source":["import os\n","import keras\n","from keras.models import Sequential\n","from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, BatchNormalization\n","from PIL import Image\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","plt.style.use('dark_background')\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import OneHotEncoder"]},{"cell_type":"code","source":["encoder = OneHotEncoder()\n","encoder.fit([[0], [1]])\n","\n","# 0 - Tumor\n","# 1 - Normal"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"byEaVHC9u2OZ","executionInfo":{"status":"ok","timestamp":1689687613465,"user_tz":-420,"elapsed":38,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}},"outputId":"2fc1f98a-3d99-4626-dee0-340673c92a91"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["OneHotEncoder()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>OneHotEncoder()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# This cell updates result list for images with tumor\n","\n","data = []\n","paths = []\n","result = []\n","\n","for r, d, f in os.walk(r'../input/brain-mri-images-for-brain-tumor-detection/yes'):\n","    for file in f:\n","        if '.jpg' in file:\n","            paths.append(os.path.join(r, file))\n","\n","for path in paths:\n","    img = Image.open(path)\n","    img = img.resize((128,128))\n","    img = np.array(img)\n","    if(img.shape == (128,128,3)):\n","        data.append(np.array(img))\n","        result.append(encoder.transform([[0]]).toarray())"],"metadata":{"id":"sDCQRUqeu278","executionInfo":{"status":"ok","timestamp":1689687613466,"user_tz":-420,"elapsed":33,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# This cell updates result list for images without tumor\n","\n","paths = []\n","for r, d, f in os.walk(r\"../input/brain-mri-images-for-brain-tumor-detection/no\"):\n","    for file in f:\n","        if '.jpg' in file:\n","            paths.append(os.path.join(r, file))\n","\n","for path in paths:\n","    img = Image.open(path)\n","    img = img.resize((128,128))\n","    img = np.array(img)\n","    if(img.shape == (128,128,3)):\n","        data.append(np.array(img))\n","        result.append(encoder.transform([[1]]).toarray())"],"metadata":{"id":"fAplXVF-u8ng","executionInfo":{"status":"ok","timestamp":1689687613467,"user_tz":-420,"elapsed":33,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["data = np.array(data)\n","data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FkFiz3R4vDjz","executionInfo":{"status":"ok","timestamp":1689687613468,"user_tz":-420,"elapsed":33,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}},"outputId":"2530323c-c1ae-4ab5-db6b-ce9b290ff600"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0,)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["result = np.array(result)\n","result = result.reshape(139,2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":183},"id":"pkxY-U21vGY4","executionInfo":{"status":"error","timestamp":1689687613468,"user_tz":-420,"elapsed":29,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}},"outputId":"64b9c6d9-3441-44fb-9301-ca616a18078d"},"execution_count":6,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-ad7ee7f59626>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m139\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: cannot reshape array of size 0 into shape (139,2)"]}]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test = train_test_split(data, result, test_size=0.2, shuffle=True, random_state=0)"],"metadata":{"id":"66fLhqmKvJmd","executionInfo":{"status":"aborted","timestamp":1689687613470,"user_tz":-420,"elapsed":29,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","\n","model.add(Conv2D(32, kernel_size=(2, 2), input_shape=(128, 128, 3), padding = 'Same'))\n","model.add(Conv2D(32, kernel_size=(2, 2),  activation ='relu', padding = 'Same'))\n","\n","\n","model.add(BatchNormalization())\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(64, kernel_size = (2,2), activation ='relu', padding = 'Same'))\n","model.add(Conv2D(64, kernel_size = (2,2), activation ='relu', padding = 'Same'))\n","\n","model.add(BatchNormalization())\n","model.add(MaxPooling2D(pool_size=(2,2), strides=(2,2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Flatten())\n","\n","model.add(Dense(512, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(2, activation='softmax'))\n","\n","model.compile(loss = \"categorical_crossentropy\", optimizer='Adamax')\n","print(model.summary())"],"metadata":{"id":"n38dA7JMvKbm","executionInfo":{"status":"aborted","timestamp":1689687613471,"user_tz":-420,"elapsed":29,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_train.shape"],"metadata":{"id":"h5xhenwbvNiY","executionInfo":{"status":"aborted","timestamp":1689687613472,"user_tz":-420,"elapsed":30,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(x_train, y_train, epochs = 30, batch_size = 40, verbose = 1,validation_data = (x_test, y_test))"],"metadata":{"id":"17Gpwcv_vRWU","executionInfo":{"status":"aborted","timestamp":1689687613474,"user_tz":-420,"elapsed":31,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title('Model Loss')\n","plt.ylabel('Loss')\n","plt.xlabel('Epoch')\n","plt.legend(['Test', 'Validation'], loc='upper right')\n","plt.show()"],"metadata":{"id":"uttHTlMBvTru","executionInfo":{"status":"aborted","timestamp":1689687613475,"user_tz":-420,"elapsed":32,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"KVrgXxzkvVyR","executionInfo":{"status":"aborted","timestamp":1689687613476,"user_tz":-420,"elapsed":33,"user":{"displayName":"Dzaki Moch Fikri Aliffa","userId":"13313020355563323270"}}},"execution_count":null,"outputs":[]}]}